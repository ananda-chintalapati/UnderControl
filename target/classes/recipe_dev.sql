CREATE DATABASE IF NOT EXISTS RECIPE;

USE RECIPE;

DROP TABLE IF EXISTS ITEM;
DROP TABLE IF EXISTS UNIT;
DROP TABLE IF EXISTS ITEM_COST;
DROP TABLE IF EXISTS ITEM_STOCK;
DROP TABLE IF EXISTS CALORIE;
DROP TABLE IF EXISTS RECIPE;
DROP TABLE IF EXISTS RECIPE_TEXT;
DROP TABLE IF EXISTS INGRADIENT;


CREATE TABLE ITEM (
	ITEM_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	CATEGORY VARCHAR(25) NOT NULL,	
	PRIMARY KEY(ITEM_ID)
);

CREATE TABLE UNIT (
	UNIT_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(25) NOT NULL,
	PRIMARY KEY(UNIT_ID)
);

CREATE TABLE ITEM_COST (
	ITEM_ID INT NOT NULL,
	COST_PER_QTY VARCHAR(20) NOT NULL,
	PRIMARY KEY(ITEM_ID),
	
	INDEX(ITEM_ID),
	FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID)
);

CREATE TABLE ITEM_STOCK (
	ITEM_ID INT NOT NULL,
	WEIGHT_AVAILABLE VARCHAR(20),
	QTY_AVAILABLE VARCHAR(20),
	PRIMARY KEY(ITEM_ID),
	
	INDEX(ITEM_ID),
	FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID)
);

CREATE TABLE CALORIE (
	CALORIE_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	CALORIE_VALUE INT NOT NULL,
	ITEM_TYPE VARCHAR(20) NOT NULL,
	PRIMARY KEY(CALORIE_ID),
	
	INDEX(ITEM_ID),
	FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID)
);

CREATE TABLE RECIPE (
	RECIPE_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	CATEGORY VARCHAR(25) NOT NULL,
	CUISINE VARCHAR(25) NOT NULL,
	TEXTURE VARCHAR(25),
	DISH_TYPE VARCHAR(25),
	SPICE_LEVEL VARCHAR(25) NOT NULL,
	CALORIE_ID INT,
	TIME_TO_PREP INT NOT NULL,
	TIME_TO_COOK INT NOT NULL,
	PRIMARY KEY(RECIPE_ID),
	
	INDEX(CALORIE_ID),
	FOREIGN KEY(CALORIE_ID) REFERENCES CALORIE(CALORIE_ID)
);

CREATE TABLE RECIPE_TEXT (
	RECIPE_ID INT NOT NULL,
	TEXT VARCHAR(500) NOT NULL,
	IMAGE BLOB,
	PRIMARY KEY(RECIPE_ID),
	
	INDEX(RECIPE_ID),
	FOREIGN KEY(RECIPE_ID) REFERENCES RECIPE(RECIPE_ID)
);

CREATE TABLE INGRADIENT (
	RECIPE_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	REQD_QTY INT NOT NULL,
	UNIT_ID INT,
	PRIMARY KEY(RECIPE_ID, ITEM_ID),
	
	INDEX(RECIPE_ID),
	FOREIGN KEY(RECIPE_ID) REFERENCES RECIPE(RECIPE_ID),
	
	INDEX(ITEM_ID),
	FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID)
);

COMMIT;